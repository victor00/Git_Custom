//Acessar configurações global notepad++ ~/.gitconfig
//Acessar configurações locais git config --local --edit

[alias]
	last = log -1 HEAD
	lg = log --graph --all --pretty=format:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)%an%Creset %C(yellow)%d%Creset'

	st = status -sb
	cm = commit -m
	rv = remote -v
	d = diff
	dv = difftool -t vimdiff -y
	se = !git rev-list --all | xargs git grep -F
	a = add
	co = checkout
	cob = checkout -b
	
	# list branches sorted by last modified
    	b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"
	
	# list aliases
    	la = "!git config -l | grep alias | cut -c 7-"
	rao = remote add origin
	ac = !git add . && git commit -am
	pushitgood = push -u origin --all
	
	#If you use this from master all the brances merged to master are deleted
	clean-merged = !git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d
	undo-commit = reset --soft HEAD~1
	
	#history: This is pretty much the only way I look at my log. Aside from providing one-line logs,
	#it also shows the branching in/out
	hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
	
	# branch delete: This checks out your local master branch and deletes all local branches
	#                that have already been merged to master
	brd = !sh -c \"git checkout master && git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d\"


[color "branch"]
	current = green
	remote = yellow

[branch "master"]
	remote = origin
	merge = refs/heads/master

[help]
	autocorrect = 1